static void Main(string[] args)
{

    var digits = Console.ReadLine().ToCharArray().Select(x => int.Parse(x.ToString())).ToArray();
    var num = int.Parse(Console.ReadLine());

    var i = CountExp(digits, num, 1, digits[0], 1, 0, false);

    Console.WriteLine(i);
}

private static int CountExp(int[] digits, int expectedResult, int index, int currentNumber, int currentProduct, int currentSum, bool negative)
{
    if (index == digits.Length)
    {
        currentProduct *= currentNumber;
        currentSum += negative ? -currentProduct : currentProduct;

        if (currentSum == expectedResult)
        {
            return 1;
        }

        return 0;
    }

    var result = 0;
    var nextSum = currentSum + currentProduct * currentNumber * (negative ? -1 : 1);
    result += CountExp(digits, expectedResult, index + 1, digits[index], 1, nextSum, false);
    result += CountExp(digits, expectedResult, index + 1, digits[index], 1, nextSum, true);

    var nextProduct = currentProduct * currentNumber;
    result += CountExp(digits, expectedResult, index + 1, digits[index], nextProduct, currentSum, negative);

    if (currentNumber != 0)
    {
        var nextNumber = currentNumber * 10 + digits[index];
        result += CountExp(digits, expectedResult, index + 1, nextNumber, currentProduct, currentSum, negative);
    }

    return result;
}
